{"version":3,"sources":["webpack:///./src/components/Container.js?c44f"],"names":["fileActions","Container","store","user","droppedBoxNames","file","ownedFiles","fetchedFiles","sharedFiles","currentFile","currentFileKeys","isSettingCurrent","currentProject","associativeFiles","showHideSchemaMaker","validColName","currentProjectSchema","boxName","props","indexOf","id","parseInt","match","params","shared","location","search","dispatch","getCurrentFile","column","findDOMNode","value","length","updateValidColName","index","item","itemDrop","that","makeProjectData","setTimeout","obj","email","data","createProjectFile","e","preventDefault","addColToSchema","boxes","dustbins","areDustbins","name","overflow","clear","map","keys","Object","el","ind","isDropped","handleAddSchemaClick","bind","handleColNameChange","handleAddColumn","hideSchemaMaker","lastDroppedItem","associatedFile","handleDrop","handleSave","showData"],"mappings":"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","file":"0.02a79e61ef564738ed36.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport update from 'react/lib/update';\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\nimport { connect } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport {\n  Grid,\n  Row,\n  Col,\n  Button,\n  Modal,\n  FormGroup,\n  Form,\n  ControlLabel,\n  FormControl,\n\n} from 'react-bootstrap'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from 'react-router-dom'\n\nimport Dustbin from './Dustbin';\nimport Box from './Box';\nimport FileDnd from './FileDnd'\nimport store from '../store'\n//import * as dndActions from '../actions/dndActions'\nimport * as fileActions from '../actions/fileActions'\n\n\n//NOTE: comb through what you are bringing into store and get rid of all of the superfluous crap\n@connect((store)=>{\n  return {\n    user: store.user.user,\n    droppedBoxNames: store.file.droppedBoxNames,\n    ownedFiles: store.file.fetchedFiles,\n    sharedFiles: store.file.sharedFiles,\n    currentFile: store.file.currentFile,\n    currentFileKeys: store.file.currentFileKeys,\n    isSettingCurrent: store.file.isSettingCurrent,\n    currentProject: store.file.currentProject,\n    associativeFiles: store.file.associativeFiles,\n    showHideSchemaMaker: store.file.showHideSchemaMaker,\n    validColName: store.file.validColName,\n    currentProjectSchema: store.file.currentProjectSchema,\n  }\n})\n\nclass Container extends Component {\n  isDropped(boxName) {\n    return this.props.droppedBoxNames.indexOf(boxName) > -1;\n  }\n\n  componentWillMount(){\n    let id = parseInt(this.props.match.params.id)\n    let shared = this.props.location.search\n    this.props.dispatch(fileActions.getCurrentFile(id,shared))\n  }\n\n  handleAddSchemaClick(){\n    this.props.dispatch(fileActions.showHideSchemaMaker())\n  }\n\n  hideSchemaMaker(){\n    this.props.dispatch(fileActions.showHideSchemaMaker())\n  }\n\n  handleColNameChange(){\n    let column = ReactDOM.findDOMNode(this.column).value\n    if(this.props.validColName){\n\n    }\n    else if(column.length){\n      this.props.dispatch(fileActions.updateValidColName())\n    }\n  }\n\n  handleDrop(index, item) {\n    this.props.dispatch(fileActions.itemDrop(index,item))\n  }\n\n  updatefile(){\n\n\n  }\n\n  showData(){\n\n  }\n\n  handleSave(){\n    let that = this\n    this.props.dispatch(fileActions.makeProjectData())\n\n    setTimeout(function(){\n      let obj = {\n        email: that.props.user.email,\n        data: that.props.currentProject\n      }\n      that.props.dispatch(fileActions.createProjectFile(obj))\n    }, 4000);\n\n    // let obj = {\n    //   email: this.props.user.email,\n    //   data: this.props.currentProject\n    // }\n    //\n    // this.props.dispatch(fileActions.createProjectFile(obj))\n\n    //add in handling for the save of the project\n    //here you could check if the path of the route says '/myproject ' if so you would save a new file,  if not you would save the existing file\n  }\n\n  handleAddColumn(e){\n    e.preventDefault()\n    let column = ReactDOM.findDOMNode(this.column).value\n    this.props.dispatch(fileActions.addColToSchema(column))\n    ReactDOM.findDOMNode(this.column).value = ''\n    this.props.dispatch(fileActions.updateValidColName())\n  }\n\n  render()\n  {\n    const {\n      boxes,\n      dustbins,\n      currentFileKeys,\n      areDustbins,\n      currentProject,\n      associativeFiles,\n      showHideSchemaMaker,\n      currentProjectSchema,\n    } = this.props;\n\n    //NOTE: keep this code - just needs to be transformed soi that it knows not to display this when we are doing newProject\n    // if(this.props.isSettingCurrent){\n    //   return(\n    //     <h1>Loading...</h1>\n    //   )\n    // }\n\n\n    return (\n      <Grid bsClass='container-fluid'>\n\n        <Row>\n          <Col className='text-center projNameRow' xs={4} xsPush={4}>\n            <h2>{currentProject.name}</h2>\n          </Col>\n        </Row>\n\n\n        <Row className='filedragcol'>\n          <Col className='text-center' xs={4} xsPush={4}>\n            <FileDnd></FileDnd>\n          </Col>\n        </Row>\n\n\n        <Row>\n          <Col className=\"text-center\" xs={12}>\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\n              {\n               associativeFiles.map((e, index) =>{\n                 let keys = Object.keys(e.data[0])\n                 return keys.map((el,ind)=>\n                 <Box\n                   fileId={e.id}\n                   name={el}\n                   isDropped={this.isDropped(name)}\n                   key={ind}\n                   >{e.name}</Box>)\n                })\n              }\n            </div>\n            <Row>\n              <Col xs={6}>\n                <div  className=\"modal-container\">\n                  <Button\n                    bsStyle=\"primary\"\n                    bsSize='large'\n                    onClick={this.handleAddSchemaClick.bind(this)}\n                  >\n                    Create Schema\n                  </Button>\n                  <Modal\n                    className='modal'\n                    show={showHideSchemaMaker}\n                  >\n                    <Modal.Header>\n                      <Modal.Title  id=\"contained-modal-title\">\n                        CreateSchema\n                      </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      <Form>\n                        <FormGroup controlId='formHorizontalName'>\n                          <ControlLabel>\n                            Set New Column Header\n                          </ControlLabel>\n                          <FormControl\n                            ref={column=>{this.column = column}}\n                            type='text'\n                            placeholder='My_Project'\n                            onChange={this.handleColNameChange.bind(this)}\n                            >\n                          </FormControl>\n                        </FormGroup>\n                        <Button\n                          bsStyle='primary'\n                          type=\"submit\"\n                          disabled={false}\n                          onClick={this.handleAddColumn.bind(this)}\n                          >\n                          Add Header\n                        </Button>\n                      </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                      <Button\n                        onClick={this.hideSchemaMaker.bind(this)}\n                      >\n                        Close\n                    </Button>\n                    </Modal.Footer>\n                  </Modal>\n                </div>\n              </Col>\n            </Row>\n\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\n              {\n                currentProjectSchema.map((e, index) =>\n                <Dustbin\n                  accepts={e}\n                  lastDroppedItem={e.lastDroppedItem}\n                  associatedFile={e.associatedFile}\n                  onDrop={item => this.handleDrop(index, item)}\n                  key={index}\n                />)\n              }\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={4} xsPush={8}>\n            <Button onClick={this.handleSave.bind(this)}>Save</Button>\n          </Col>\n        </Row>\n\n\n        <Button onClick={this.showData.bind(this)}>Save</Button>\n\n      </Grid>\n    );\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(Container)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Container.js"],"sourceRoot":""}