{"version":3,"sources":["webpack:///./src/components/Container.js?c44f"],"names":["dndActions","Container","store","user","dustbins","dnd","boxes","droppedBoxNames","ownedFiles","file","fetchedFiles","sharedFiles","currentFile","currentFileKeys","boxName","props","indexOf","id","match","console","log","location","search","data","i","length","Object","keys","overflow","clear","map","e","index","isDropped","name","accepts","lastDroppedItem","handleDrop","item","dispatch","itemDrop"],"mappings":"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","file":"0.57b201f236db2db32fd1.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport update from 'react/lib/update';\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\nimport Dustbin from './Dustbin';\nimport Box from './Box';\nimport { connect } from 'react-redux'\nimport store from '../store'\nimport * as dndActions from '../actions/dndActions'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from 'react-router-dom'\n\nimport { Row, Grid, Col } from 'react-bootstrap'\n\n@connect((store)=>{\n  return {\n    user: store.user.user,\n    dustbins: store.dnd.dustbins,\n    boxes: store.dnd.boxes,\n    droppedBoxNames: store.dnd.droppedBoxNames,\n    ownedFiles: store.file.fetchedFiles,\n    sharedFiles: store.file.sharedFiles,\n    currentFile: {},\n    currentFileKeys: [],\n  }\n})\n\nclass Container extends Component {\n  isDropped(boxName) {\n    return this.props.droppedBoxNames.indexOf(boxName) > -1;\n  }\n\n\n  onComponentWillMount(){\n    let id = this.props.match\n    console.log('inside component will mount');\n    if(this.props.location.search === \"?true\"){\n      console.log('inside the ture on componenet will mount');\n      let data = this.props.sharedFiles\n      for(let i = 0; i < data.length; i++){\n        if(data[i].id === id){\n          this.props.currentFile = data[i];\n          return;\n        }\n      }\n    }else{\n      console.log('inside the false');\n      let data = this.props.ownedFiles;\n      for(let i = 0; i < data.length; i++){\n        if(data[i].id === id){\n          this.props.currentFile = data[i];\n          return;\n        }\n      }\n    }\n    this.props.currentFileKeys = Object.keys(this.props.currentFile)\n  }\n\n\n  render() {\n    const { boxes, dustbins, currentFileKeys } = this.props;\n    console.log(dustbins);\n    console.log(currentFileKeys)\n    return (\n      <Grid bsClass='container-fluid'>\n        {currentFileKeys}\n        <Row>\n          <Col className='text-center' xs={12}>\n            <h1>Drag</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center\" xs={12}>\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\n              {currentFileKeys.map((e, index) =>\n                <Box\n                  name={e}\n                  isDropped={this.isDropped(name)}\n                  key={index}\n                />,\n              )}\n            </div>\n            <h1>Drop</h1>\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\n              {dustbins.map((e, index) =>\n                <Dustbin\n                  accepts={e.accepts}\n                  lastDroppedItem={e.lastDroppedItem}\n                  onDrop={item => this.handleDrop(index, item)}\n                  key={index}\n                />,\n              )}\n            </div>\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n\n  handleDrop(index, item) {\n    this.props.dispatch(dndActions.itemDrop(index,item))\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(Container)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Container.js"],"sourceRoot":""}