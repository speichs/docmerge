{"version":3,"sources":["webpack:///./src/components/Container.js?c44f"],"names":["fileActions","Container","store","user","header","droppedBoxNames","file","ownedFiles","fetchedFiles","sharedFiles","currentFile","currentFileKeys","isSettingCurrent","currentProject","associativeFiles","showHideSchemaMaker","validColName","currentProjectSchema","wasSaved","boxName","props","indexOf","id","parseInt","match","params","shared","location","search","console","log","dispatch","clearCurrentProject","name","map","e","copy","Object","assign","setCurrentProject","column","findDOMNode","value","length","updateValidColName","index","item","itemDrop","obj","email","data","sendEmail","that","updateProjectData","setTimeout","updateProjectFile","makeProjectData","createProjectFile","preventDefault","addColToSchema","shareEmail","useremail","fileId","userId","shareProject","boxes","dustbins","areDustbins","handleSave","bind","handleSend","handleAddSchemaClick","overflow","clear","keys","el","ind","isDropped","handleColNameChange","handleAddColumn","hideSchemaMaker","lastDroppedItem","associatedFile","handleDrop","shareFile","from","pathname"],"mappings":"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","file":"0.5c0855a374febc989068.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport update from 'react/lib/update';\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\nimport { connect } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport FontAwesome from 'react-fontawesome'\nimport {\n  Grid,\n  Row,\n  Col,\n  Button,\n  Modal,\n  FormGroup,\n  Form,\n  ControlLabel,\n  FormControl,\n} from 'react-bootstrap'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from 'react-router-dom'\n\nimport Dustbin from './Dustbin';\nimport Box from './Box';\nimport FileDnd from './FileDnd'\nimport store from '../store'\nimport * as fileActions from '../actions/fileActions'\n\n@connect((store)=>{\n  return {\n    user: store.user.user,\n    header: store.user.header,\n    droppedBoxNames: store.file.droppedBoxNames,\n    ownedFiles: store.file.fetchedFiles,\n    sharedFiles: store.file.sharedFiles,\n    currentFile: store.file.currentFile,\n    currentFileKeys: store.file.currentFileKeys,\n    isSettingCurrent: store.file.isSettingCurrent,\n    currentProject: store.file.currentProject,\n    associativeFiles: store.file.associativeFiles,\n    showHideSchemaMaker: store.file.showHideSchemaMaker,\n    validColName: store.file.validColName,\n    currentProjectSchema: store.file.currentProjectSchema,\n    wasSaved: store.file.wasSaved,\n  }\n})\n\nclass Container extends Component {\n  isDropped(boxName) {\n    return this.props.droppedBoxNames.indexOf(boxName) > -1;\n  }\n\n  componentWillMount(){\n    let id = parseInt(this.props.match.params.id)\n    let shared = this.props.location.search;\n\n    console.log('location.search: ', shared)\n\n    if(!shared){\n      this.props.dispatch(fileActions.clearCurrentProject(this.props.currentProject.name))\n    }\n    else if(shared === \"?false\"){\n      this.props.ownedFiles.map(e=>{\n        if(e.id === id){\n          let copy = Object.assign({},e)\n          console.log(copy);\n          this.props.dispatch(fileActions.setCurrentProject(copy))\n        }\n      })\n    }else if(shared === \"?true\"){\n      this.props.sharedFiles.map(e=>{\n        if(e.id === id){\n          let copy = Object.assign({},e)\n\n          this.props.dispatch(fileActions.setCurrentProject(copy))\n        }\n      })\n    }\n  }\n\n  handleAddSchemaClick(){\n    this.props.dispatch(fileActions.showHideSchemaMaker())\n  }\n\n  hideSchemaMaker(){\n    this.props.dispatch(fileActions.showHideSchemaMaker())\n  }\n\n  handleColNameChange(){\n    let column = ReactDOM.findDOMNode(this.column).value\n    if(this.props.validColName){\n\n    }\n    else if(column.length){\n      this.props.dispatch(fileActions.updateValidColName())\n    }\n  }\n\n  handleDrop(index, item) {\n    this.props.dispatch(fileActions.itemDrop(index,item))\n  }\n\n  handleSend(){\n    let obj = {\n      email: this.props.user.email,\n      data: this.props.currentProject\n    }\n    this.props.dispatch(fileActions.sendEmail(obj))\n  }\n\n  handleSave(){\n    let that = this\n\n    if(this.props.wasSaved){\n      this.props.dispatch(fileActions.updateProjectData())\n\n      setTimeout(function(){\n        let obj = {\n          email: that.props.user.email,\n          data: that.props.currentProject\n        }\n        that.props.dispatch(fileActions.updateProjectFile(obj))\n      }, 4000);\n    }else{\n      this.props.dispatch(fileActions.makeProjectData())\n\n      setTimeout(function(){\n        let obj = {\n          email: that.props.user.email,\n          data: that.props.currentProject\n        }\n        that.props.dispatch(fileActions.createProjectFile(obj))\n      }, 4000);\n    }\n  }\n\n  handleAddColumn(e){\n    e.preventDefault()\n    let column = ReactDOM.findDOMNode(this.column).value\n    this.props.dispatch(fileActions.addColToSchema(column))\n    ReactDOM.findDOMNode(this.column).value = ''\n    this.props.dispatch(fileActions.updateValidColName())\n  }\n\n  shareFile(e){\n    e.preventDefault()\n    let shareEmail = ReactDOM.findDOMNode(this.useremail).value\n    let fileId = this.props.currentProject.id;\n    let userId = this.props.user.id;\n    let obj = {\n      shareEmail,\n      fileId,\n      userId\n    }\n    this.props.dispatch(fileActions.shareProject(obj))\n  }\n\n  handleUpdate(e){\n    e.preventDefault();\n    let that = this\n\n    this.props.dispatch(fileActions.updateProjectData())\n\n    setTimeout(function(){\n      let obj = {\n        email: that.props.user.email,\n        data: that.props.currentProject\n      }\n      that.props.dispatch(fileActions.updateProjectFile(obj))\n    }, 4000);\n  }\n\n  render()\n  {\n    const {\n      boxes,\n      dustbins,\n      currentFileKeys,\n      areDustbins,\n      currentProject,\n      associativeFiles,\n      showHideSchemaMaker,\n      currentProjectSchema,\n    } = this.props;\n\n    if(this.props.header){\n      return (\n        <Grid bsClass='container-fluid'>\n\n          <Row>\n            <Col xs={1}>\n              <Button\n              id='successbutton'\n              className='savebutton'\n              bsSize='large'\n              block\n              onClick={this.handleSave.bind(this)}>\n              <FontAwesome className=\"fa-floppy-o create\"></FontAwesome>\n              Save\n            </Button>\n            </Col>\n            <Col xs={2}>\n              <Button\n                id='successbutton'\n                className='savebutton'\n                bsSize='large'\n                onClick={this.handleSend.bind(this)}>\n                <FontAwesome className=\"fa-envelope create\"></FontAwesome>\n                Send Email\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className='text-center projNameRow' xs={4} xsPush={4}>\n              <h2>{currentProject.name}</h2>\n            </Col>\n          </Row>\n\n\n          <Row className='filedragcol'>\n            <Col className='text-center' xs={4} xsPush={4}>\n              <FileDnd></FileDnd>\n            </Col>\n          </Row>\n\n\n          <Row>\n            <Col className=\"text-center\" xs={12}>\n              <Row className='createSchemaButton'>\n                <Col xs={4} xsPush={4}>\n                  <Button\n                    id='successbutton'\n                    bsStyle=\"primary\"\n                    bsSize='large'\n                    onClick={this.handleAddSchemaClick.bind(this)}\n                    block\n                  >\n                    Create Schema\n                  </Button>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={10} xsPush={1}>\n                  <div style={{ overflow: 'hidden', clear: 'both' }}>\n                    {\n                      associativeFiles.length? associativeFiles.map((e, index) =>{\n                        let keys = Object.keys(e.data[0])\n                        return keys.map((el,ind)=>\n                        <Box\n                          fileId={e.id}\n                          name={el}\n                          isDropped={this.isDropped(name)}\n                          key={ind}\n                          >{e.name}</Box>)\n                        }) : <p></p>\n                      }\n                    </div>\n                </Col>\n              </Row>\n\n              <Row>\n\n                <Col xs={6}>\n                    <Modal\n                      className='modal'\n                      show={showHideSchemaMaker}\n                    >\n                      <Modal.Header>\n                        <Modal.Title  id=\"contained-modal-title\">\n                          CreateSchema\n                        </Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <Form>\n                          <FormGroup controlId='formHorizontalName'>\n                            <ControlLabel>\n                              Set New Column Header\n                            </ControlLabel>\n                            <FormControl\n                              ref={column=>{this.column = column}}\n                              type='text'\n                              placeholder='Header_1'\n                              onChange={this.handleColNameChange.bind(this)}\n                              >\n                            </FormControl>\n                          </FormGroup>\n                          <Button\n                            bsStyle='primary'\n                            type=\"submit\"\n                            disabled={false}\n                            onClick={this.handleAddColumn.bind(this)}\n                            >\n                            Add Header\n                          </Button>\n                        </Form>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button\n                          onClick={this.hideSchemaMaker.bind(this)}\n                        >\n                          Close\n                      </Button>\n                      </Modal.Footer>\n                    </Modal>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col xs={10} xsPush={1}>\n                  <div style={{ overflow: 'hidden', clear: 'both' }}>\n                    {\n                      currentProjectSchema.map((e, index) =>\n                      <Dustbin\n                        accepts={e}\n                        lastDroppedItem={e.lastDroppedItem}\n                        associatedFile={e.associatedFile}\n                        onDrop={item => this.handleDrop(index, item)}\n                        key={index}\n                      />)\n                    }\n                  </div>\n                </Col>\n              </Row>\n\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={2} xsPush={9}>\n              {\n\n                // : <Button\n                //   id='successbutton'\n                //   className='savebutton'\n                //   block\n                //   bsSize='large'\n                //   onClick={this.handleUpdate.bind(this)}>\n                //   Update\n                // </Button>\n              }\n            </Col>\n          </Row>\n          <br/>\n          {/* SAVE WAS HERE */}\n          <br/>\n          <Row>\n            <Col className='text-center' xs={4}>\n              <h4>Share With Another User</h4>\n              <Form inline onSubmit={this.shareFile.bind(this)}>\n                <FormGroup>\n                  <ControlLabel>\n                    Email: { }\n                  </ControlLabel>\n                  <FormControl\n                  ref={useremail=>{this.useremail = useremail}}\n                  type=\"email\"\n                  placeholder=\"User Email\"\n                  >\n                  </FormControl>\n                </FormGroup>\n                <Button type='submit'>Share</Button>\n              </Form>\n            </Col>\n          </Row>\n          <br/>\n          <Row>\n            <Col xs={2} xsPush={9}>\n            <Link to='/myprojects'>\n              <Button\n                id='successbutton'\n                bsSize='large'\n                block\n              >\n                My Projects\n              </Button>\n            </Link>\n            </Col>\n          </Row>\n\n\n\n        </Grid>\n      );\n    }else{\n      const { from } = { from: { pathname:'/'} }\n      return (\n        <Redirect to={from}></Redirect>\n      )\n    }\n\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(Container)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Container.js"],"sourceRoot":""}