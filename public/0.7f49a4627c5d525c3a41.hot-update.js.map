{"version":3,"sources":["webpack:///./src/components/Box.js?196f"],"names":["fileActions","style","border","backgroundColor","padding","marginRight","marginBottom","cursor","float","boxSource","beginDrag","props","name","Box","isDropped","isDragging","connectDragSource","opacity","type","connect","monitor","dragSource"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;AACA;;;;AACA;;IAAYA,W;;;;;;;;;;;AAJZ;;;AAOA,IAAMC,QAAQ;AACZC,UAAQ,gBADI;AAEZC,mBAAiB,OAFL;AAGZC,WAAS,aAHG;AAIZC,eAAa,QAJD;AAKZC,gBAAc,QALF;AAMZC,UAAQ,MANI;AAOZC,SAAO;AAPK,CAAd;;AAUA,IAAMC,YAAY;AAChBC,WADgB,qBACNC,KADM,EACC;AACf,WAAO;AACLC,YAAMD,MAAMC;AADP,KAAP;AAGD;AALe,CAAlB;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,G;;;;;;;;;;;6BAEK;AAAA,mBACoD,KAAKF,KADzD;AAAA,UACCC,IADD,UACCA,IADD;AAAA,UACOE,SADP,UACOA,SADP;AAAA,UACkBC,UADlB,UACkBA,UADlB;AAAA,UAC8BC,iBAD9B,UAC8BA,iBAD9B;;AAEP,UAAMC,UAAUF,aAAa,GAAb,GAAmB,CAAnC;;AAEA,aAAOC,kBACL;AAAA;AAAA,UAAK,oBAAYf,KAAZ,IAAmBgB,gBAAnB,GAAL;AACGH,oBACC;AAAA;AAAA;AAAIF;AAAJ,SADD,GAECA;AAHJ,OADK,CAAP;AAQD;;;;;;eAGY,0BAAW;AAAA,SAASD,MAAMO,IAAf;AAAA,CAAX,EAAgCT,SAAhC,EAA2C,UAACU,OAAD,EAAUC,OAAV;AAAA,SAAuB;AAC/EJ,uBAAmBG,QAAQE,UAAR,EAD4D;AAE/EN,gBAAYK,QAAQL,UAAR;AAFmE,GAAvB;AAAA,CAA3C,EAGXF,GAHW,C;;;;;;;;;;gCA1CTZ,K;;gCAUAQ,S;;gCAeAI,G","file":"0.7f49a4627c5d525c3a41.hot-update.js","sourcesContent":["import React, { Component } from 'react'\n//import PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd'\nimport { connect } from 'react-redux'\nimport store from '../store'\nimport * as fileActions from '../actions/dndActions'\n\n\nconst style = {\n  border: '1px solid blue',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  cursor: 'move',\n  float: 'left',\n};\n\nconst boxSource = {\n  beginDrag(props) {\n    return {\n      name: props.name,\n    };\n  },\n};\n\n// @connect((store)=>{\n//   return {\n//     user: store.user.user,\n//     dustbins: store.dnd.dustbins,\n//     boxes: store.dnd.boxes,\n//   }\n// })\nclass Box extends Component {\n\n  render() {\n    const { name, isDropped, isDragging, connectDragSource } = this.props;\n    const opacity = isDragging ? 0.4 : 1;\n\n    return connectDragSource(\n      <div style={{ ...style, opacity }}>\n        {isDropped ?\n          <s>{name}</s> :\n          name\n        }\n      </div>,\n    );\n  }\n}\n\nexport default DragSource(props => props.type, boxSource, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging(),\n}))(Box)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Box.js"],"sourceRoot":""}