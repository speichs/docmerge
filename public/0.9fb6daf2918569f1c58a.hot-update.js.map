{"version":3,"sources":["webpack:///./src/components/Container.js?c44f"],"names":["fileActions","Container","store","user","droppedBoxNames","file","ownedFiles","fetchedFiles","sharedFiles","currentFile","currentFileKeys","isSettingCurrent","currentProject","associativeFiles","showHideSchemaMaker","validColName","currentProjectSchema","boxName","props","indexOf","id","parseInt","match","params","shared","location","search","map","e","copy","Object","assign","console","log","dispatch","setCurrentProject","column","findDOMNode","value","length","updateValidColName","index","item","itemDrop","obj","email","data","sendEmail","that","makeProjectData","setTimeout","createProjectFile","preventDefault","addColToSchema","boxes","dustbins","areDustbins","name","handleAddSchemaClick","bind","overflow","clear","keys","el","ind","isDropped","handleColNameChange","handleAddColumn","hideSchemaMaker","lastDroppedItem","associatedFile","handleDrop","handleSave","wasSaved","handleSend"],"mappings":"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","file":"0.9fb6daf2918569f1c58a.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport update from 'react/lib/update';\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\nimport { connect } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport {\n  Grid,\n  Row,\n  Col,\n  Button,\n  Modal,\n  FormGroup,\n  Form,\n  ControlLabel,\n  FormControl,\n\n} from 'react-bootstrap'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from 'react-router-dom'\n\nimport Dustbin from './Dustbin';\nimport Box from './Box';\nimport FileDnd from './FileDnd'\nimport store from '../store'\n//import * as dndActions from '../actions/dndActions'\nimport * as fileActions from '../actions/fileActions'\n\n\n//NOTE: comb through what you are bringing into store and get rid of all of the superfluous crap\n@connect((store)=>{\n  return {\n    user: store.user.user,\n    droppedBoxNames: store.file.droppedBoxNames,\n    ownedFiles: store.file.fetchedFiles,\n    sharedFiles: store.file.sharedFiles,\n    currentFile: store.file.currentFile,\n    currentFileKeys: store.file.currentFileKeys,\n    isSettingCurrent: store.file.isSettingCurrent,\n    currentProject: store.file.currentProject,\n    associativeFiles: store.file.associativeFiles,\n    showHideSchemaMaker: store.file.showHideSchemaMaker,\n    validColName: store.file.validColName,\n    currentProjectSchema: store.file.currentProjectSchema,\n  }\n})\n\nclass Container extends Component {\n  isDropped(boxName) {\n    return this.props.droppedBoxNames.indexOf(boxName) > -1;\n  }\n\n  componentWillMount(){\n    let id = parseInt(this.props.match.params.id)\n    let shared = this.props.location.search;\n    if(!id){\n    }\n    else if(shared === \"?false\"){\n      this.props.ownedFiles.map(e=>{\n        if(e.id === id){\n          let copy = Object.assign({},e)\n          console.log(copy);\n          this.props.dispatch(fileActions.setCurrentProject(copy))\n        }\n      })\n    }else if(shared === \"?true\"){\n      this.props.sharedFiles.map(e=>{\n        if(e.id === id){\n          let copy = Object.assign({},e)\n\n          this.props.dispatch(fileActions.setCurrentProject(copy))\n        }\n      })\n    }\n  }\n\n  handleAddSchemaClick(){\n    this.props.dispatch(fileActions.showHideSchemaMaker())\n  }\n\n  hideSchemaMaker(){\n    this.props.dispatch(fileActions.showHideSchemaMaker())\n  }\n\n  handleColNameChange(){\n    let column = ReactDOM.findDOMNode(this.column).value\n    if(this.props.validColName){\n\n    }\n    else if(column.length){\n      this.props.dispatch(fileActions.updateValidColName())\n    }\n  }\n\n  handleDrop(index, item) {\n    this.props.dispatch(fileActions.itemDrop(index,item))\n  }\n\n  handleSend(){\n    let obj = {\n      email:this.props.user.email,\n      data: this.props.file.currentProject\n    }\n    this.props.dispatch(fileActions.sendEmail())\n  }\n\n  handleSave(){\n    let that = this\n    this.props.dispatch(fileActions.makeProjectData())\n\n    setTimeout(function(){\n      let obj = {\n        email: that.props.user.email,\n        data: that.props.currentProject\n      }\n      that.props.dispatch(fileActions.createProjectFile(obj))\n    }, 4000);\n  }\n\n  handleAddColumn(e){\n    e.preventDefault()\n    let column = ReactDOM.findDOMNode(this.column).value\n    this.props.dispatch(fileActions.addColToSchema(column))\n    ReactDOM.findDOMNode(this.column).value = ''\n    this.props.dispatch(fileActions.updateValidColName())\n  }\n\n  render()\n  {\n    const {\n      boxes,\n      dustbins,\n      currentFileKeys,\n      areDustbins,\n      currentProject,\n      associativeFiles,\n      showHideSchemaMaker,\n      currentProjectSchema,\n    } = this.props;\n\n    return (\n      <Grid bsClass='container-fluid'>\n\n        <Row>\n          <Col className='text-center projNameRow' xs={4} xsPush={4}>\n            <h2>{currentProject.name}</h2>\n          </Col>\n        </Row>\n\n\n        <Row className='filedragcol'>\n          <Col className='text-center' xs={4} xsPush={4}>\n            <FileDnd></FileDnd>\n          </Col>\n        </Row>\n\n\n        <Row>\n          <Col className=\"text-center\" xs={12}>\n            <Row className='createSchemaButton'>\n              <Col xs={4} xsPush={4}>\n                <Button\n                  id='successbutton'\n                  bsStyle=\"primary\"\n                  bsSize='large'\n                  onClick={this.handleAddSchemaClick.bind(this)}\n                  block\n                >\n                  Create Schema\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={10} xsPush={1}>\n                <div style={{ overflow: 'hidden', clear: 'both' }}>\n                  {\n                    associativeFiles.map((e, index) =>{\n                      let keys = Object.keys(e.data[0])\n                      return keys.map((el,ind)=>\n                      <Box\n                        fileId={e.id}\n                        name={el}\n                        isDropped={this.isDropped(name)}\n                        key={ind}\n                        >{e.name}</Box>)\n                      })\n                    }\n                  </div>\n              </Col>\n            </Row>\n\n            <Row>\n\n              <Col xs={6}>\n                  <Modal\n                    className='modal'\n                    show={showHideSchemaMaker}\n                  >\n                    <Modal.Header>\n                      <Modal.Title  id=\"contained-modal-title\">\n                        CreateSchema\n                      </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      <Form>\n                        <FormGroup controlId='formHorizontalName'>\n                          <ControlLabel>\n                            Set New Column Header\n                          </ControlLabel>\n                          <FormControl\n                            ref={column=>{this.column = column}}\n                            type='text'\n                            placeholder='Header_1'\n                            onChange={this.handleColNameChange.bind(this)}\n                            >\n                          </FormControl>\n                        </FormGroup>\n                        <Button\n                          bsStyle='primary'\n                          type=\"submit\"\n                          disabled={false}\n                          onClick={this.handleAddColumn.bind(this)}\n                          >\n                          Add Header\n                        </Button>\n                      </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                      <Button\n                        onClick={this.hideSchemaMaker.bind(this)}\n                      >\n                        Close\n                    </Button>\n                    </Modal.Footer>\n                  </Modal>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xs={10} xsPush={1}>\n                <div style={{ overflow: 'hidden', clear: 'both' }}>\n                  {\n                    currentProjectSchema.map((e, index) =>\n                    <Dustbin\n                      accepts={e}\n                      lastDroppedItem={e.lastDroppedItem}\n                      associatedFile={e.associatedFile}\n                      onDrop={item => this.handleDrop(index, item)}\n                      key={index}\n                    />)\n                  }\n                </div>\n              </Col>\n            </Row>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={2} xsPush={9}>\n            <Button\n              id='successbutton'\n              className='savebutton'\n              block\n              bsSize='large'\n              onClick={this.handleSave.bind(this)}>\n              Save\n            </Button>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={2} xsPush={9}>\n            <Button\n              disabled = {this.props.wasSaved || this.props.match.params.id}\n              id='successbutton'\n              className='savebutton'\n              block\n              bsSize='large'\n              onClick={this.handleSend.bind(this)}>\n              <FontAwesome className=\"fa-envelope create\"></FontAwesome>\n              Send Email\n            </Button>\n          </Col>\n        </Row>\n\n\n      </Grid>\n    );\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(Container)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Container.js"],"sourceRoot":""}