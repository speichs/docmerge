{"version":3,"sources":["webpack:///./src/components/FileDnd.js?fbc1"],"names":["fileActions","dustbinTarget","drop","props","monitor","onDrop","getItem","outerStyle","fileDND","store","user","file","e","preventDefault","data","dataTransfer","items","getAsFile","name","split","splice","length","join","dropEffect","obj","email","that","parse","header","dynamicTyping","complete","results","dispatch","createFile","end","connectDropTarget","isOver","canDrop","isActive","backgroundColor","color","handleDrop","bind","Component","FILE","connect","dropTarget"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AAOA;;AACA;;;;AAGA;;;;AACA;;IAAYA,W;;;;;;;;;;;;AAEZ,IAAMC,gBAAgB;AACpBC,MADoB,gBACfC,KADe,EACRC,OADQ,EACC;AACnBD,UAAME,MAAN,CAAaD,QAAQE,OAAR,EAAb;AACD;AAHmB,CAAtB;;AAMA,IAAMC,aAAa,EAAnB;;IAUMC,O,WANL,yBAAQ,UAACC,KAAD,EAAS;AAChB,SAAO;AACLC,UAAMD,MAAMC,IAAN,CAAWA,IADZ;AAELC,UAAMF,MAAME,IAAN,CAAWA;AAFZ,GAAP;AAID,CALA,C;;;;;;;;;;;+BAQYC,C,EAAE;AACXA,QAAEC,cAAF;AACA,UAAIC,OAAOF,EAAEG,YAAF,CAAeC,KAAf,CAAqB,CAArB,EAAwBC,SAAxB,EAAX;AACA,UAAIC,OAAOJ,KAAKI,IAAhB;AACAA,aAAOA,KAAKC,KAAL,CAAW,EAAX,CAAP;AACAD,WAAKE,MAAL,CAAYF,KAAKG,MAAL,GAAY,CAAxB,EAA0B,CAA1B;AACAH,aAAOA,KAAKI,IAAL,CAAU,EAAV,CAAP;AACAV,QAAEG,YAAF,CAAeQ,UAAf,GAA4B,MAA5B;AACA,UAAIZ,OAAOC,EAAEG,YAAF,CAAeC,KAAf,CAAqB,CAArB,EAAwBC,SAAxB,EAAX;AACA,UAAIO,MAAM,EAACC,OAAM,KAAKtB,KAAL,CAAWO,IAAX,CAAgBe,KAAvB,EAAV;AACA,UAAIC,OAAO,IAAX;AACA,0BAAUC,KAAV,CAAgBhB,IAAhB,EAAsB;AACpBiB,gBAAQ,IADY;AAEpBC,uBAAe,IAFK;AAGpBC,kBAAU,kBAASC,OAAT,EAAiB;AACzBP,cAAIV,IAAJ,GAAWiB,QAAQjB,IAAnB;AACAU,cAAIN,IAAJ,GAAWA,IAAX;AACAQ,eAAKvB,KAAL,CAAW6B,QAAX,CAAoBhC,YAAYiC,UAAZ,CAAuBT,GAAvB,CAApB;AACD;AAPmB,OAAtB;AASA,2BAAWU,GAAX;AACD;;;6BAEO;AAAA,mBACyC,KAAK/B,KAD9C;AAAA,UACEgC,iBADF,UACEA,iBADF;AAAA,UACqBC,MADrB,UACqBA,MADrB;AAAA,UAC6BC,OAD7B,UAC6BA,OAD7B;;;AAGN,UAAMC,WAAWF,UAAUC,OAA3B;;AAEA,UAAIE,kBAAkB,OAAtB;AACA,UAAIC,QAAQ,OAAZ;AACA,UAAIJ,MAAJ,EAAY;AACVG,0BAAkB,SAAlB;AACD,OAFD,MAEK;AACHA,0BAAkB,OAAlB;AACD;;AAGD,aAAOJ,kBACL;AAAA;AAAA,UAAK,oBAAW5B,UAAX,IAAuBgC,gCAAvB,GAAL,EAA8C,WAAU,cAAxD;AACE;AAAA;AAAA;AACE,oBAAQ,KAAKE,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CADV;AAEE,uBAAU,UAFZ;AAGE;AAAA;AAAA,cAAI,WAAU,eAAd;AAAA;AAAA,WAHF;AAME,iDAAK,KAAI,wBAAT;AANF;AADF,OADK,CAAP;AAYD;;;;EAnDmB,gBAAMC,S;;eAsDb,0BAAW,kCAAYC,IAAvB,EAA6B3C,aAA7B,EAA4C,UAAC4C,OAAD,EAAUzC,OAAV;AAAA,SAAuB;AAChF+B,uBAAmBU,QAAQC,UAAR,EAD6D;AAEhFV,YAAQhC,QAAQgC,MAAR,EAFwE;AAGhFC,aAASjC,QAAQiC,OAAR;AAHuE,GAAvB;AAAA,CAA5C,EAIX7B,OAJW,C;;;;;;;;;;gCAtETP,a;;gCAMAM,U;;gCAUAC,O","file":"0.a06ba55d0d9b9ce096b3.hot-update.js","sourcesContent":["import React from 'react'\nimport { connect } from \"react-redux\"\nimport papaparse from 'papaparse'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from 'react-router-dom'\nimport { DropTarget, DragSource } from 'react-dnd'\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\n\n\nimport store from '../store'\nimport * as fileActions from '../actions/fileActions'\n\nconst dustbinTarget = {\n  drop(props, monitor) {\n    props.onDrop(monitor.getItem());\n  },\n};\n\nconst outerStyle = {\n\n}\n\n@connect((store)=>{\n  return {\n    user: store.user.user,\n    file: store.file.file,\n  }\n})\nclass fileDND extends React.Component{\n\n  handleDrop(e){\n    e.preventDefault();\n    let data = e.dataTransfer.items[0].getAsFile()\n    let name = data.name\n    name = name.split('')\n    name.splice(name.length-4,4)\n    name = name.join('')\n    e.dataTransfer.dropEffect = 'copy';\n    let file = e.dataTransfer.items[0].getAsFile()\n    let obj = {email:this.props.user.email}\n    let that = this;\n    papaparse.parse(file, {\n      header: true,\n      dynamicTyping: true,\n      complete: function(results){\n        obj.data = results.data\n        obj.name = name\n        that.props.dispatch(fileActions.createFile(obj))\n      }\n    })\n    DragSource.end\n  }\n\n  render(){\n    const { connectDropTarget, isOver, canDrop } = this.props\n\n    const isActive = isOver && canDrop;\n\n    let backgroundColor = 'white';\n    let color = 'black'\n    if (isOver) {\n      backgroundColor = '#00BF9A';\n    }else{\n      backgroundColor = 'white';\n    }\n\n\n    return connectDropTarget(\n      <div style={{...outerStyle, backgroundColor}} className=\"dragContiner\">\n        <div\n          onDrop={this.handleDrop.bind(this)}\n          className=\"dropzone\">\n          <h5 className='innerDropzone'>\n            Drag and Drop Files\n          </h5>\n          <img src='src/pics/green_csv.png'></img>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DropTarget(NativeTypes.FILE, dustbinTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop(),\n}))(fileDND)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FileDnd.js"],"sourceRoot":""}